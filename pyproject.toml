[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "echo-cli"
version = "0.1.0"
description = "A Python library + CLI + MCP server for detecting duplicate code blocks in polyglot repositories"
keywords = ["duplicate-code", "code-analysis", "static-analysis", "refactoring", "code-quality", "lsh", "semantic-analysis", "mcp-server", "ai-agents"]
authors = [
    {name = "Echo Project Contributors"}
]
maintainers = [
    {name = "Echo Project Contributors"}
]
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    # Core dependencies
    "tree-sitter>=0.20.0",
    "faiss-cpu>=1.7.4",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "sqlalchemy>=2.0.0",
    "watchdog>=3.0.0",
    "click>=8.0.0",
    
    # Tree-sitter language bindings
    "tree-sitter-python>=0.20.0",
    "tree-sitter-javascript>=0.20.0",
    "tree-sitter-typescript>=0.20.0",
    
    # Additional utilities
    "pathspec>=0.11.0",  # for gitignore parsing
    "tqdm>=4.65.0",      # progress bars
    "xxhash>=3.0.0",     # fast hashing
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
gpu = [
    "faiss-gpu>=1.7.4",
]

[project.scripts]
echo-cli = "echo.cli:main"

[project.urls]
Homepage = "https://github.com/sibyllinesoft/echo"
Repository = "https://github.com/sibyllinesoft/echo"
Issues = "https://github.com/sibyllinesoft/echo/issues"
Documentation = "https://github.com/sibyllinesoft/echo#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["echo*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["echo"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=echo --cov-report=term-missing --cov-report=html --asyncio-mode=auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["echo"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]